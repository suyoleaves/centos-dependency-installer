name: SH Scripts Test

on: [push]

jobs:
  test-sh-scripts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set directory permissions
        run: |
          chmod -R 777 $(pwd)

      - name: Install Docker
        run: |
          sudo apt-get remove -y containerd
          sudo apt-get autoremove -y
          curl -fsSL https://get.docker.com | sudo sh

      - name: Run in CentOS 7 Container
        env:
          DEPS_FILE: dependencies.txt
        run: |
          echo "宿主机当前目录: $(pwd)"
          echo "宿主机文件列表:"
          ls -l $(pwd)

          if [ ! -f "$(pwd)/generate_yum_repo.sh" ] || [ ! -f "$(pwd)/install_dependency.sh" ]; then
              echo "错误：必要的脚本文件不存在！"
              exit 1
          fi

          docker pull centos:7
          docker run --rm \
#            -u $(id -u):$(id -g) \
            -v $(pwd):/home/workdir:rw \
            --dns 8.8.8.8 \
            centos:7 /bin/bash -c "
              # 确保挂载目录存在
              mkdir -p /home/workdir &&
              # 设置 DNS 和 yum 配置
              echo 'nameserver 8.8.8.8' > /etc/resolv.conf &&
              curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo &&
              yum clean all &&
              yum makecache &&
              yum install -y curl sudo createrepo yum-utils &&

              # 设置脚本权限
              chmod +x /home/workdir/generate_yum_repo.sh /home/workdir/install_dependency.sh &&

              # 调试输出
              echo '容器内文件列表: $(ls -l /home/workdir)' &&
              echo 'DEPS_FILE 值: $DEPS_FILE' &&
              
              cd /home/workdir &&
              # 生成离线包
              bash generate_yum_repo.sh -f /home/workdir/dependencies.txt &&

              # 获取离线包路径
              YUM_REPO_TAR=\$(ls /home/workdir/agent_yum_repo_*.tar.gz | head -n 1) &&

              # 验证并输出路径
              echo '离线包路径: $YUM_REPO_TAR'
            "

      - name: 上传离线包到 Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "centos-offline-repo"
          path: "./agent_yum_repo_*.tar.gz"
          retention-days: 30  # 设置保留天数（默认90天）

      - name: 下载 Artifact 链接说明
        run: |
          echo "离线包已生成并上传为 Artifact，可通过以下路径下载："
          echo "1. 进入 Actions 页面，找到本次运行的 Job"
          echo "2. 点击 [Artifacts] 标签页，下载 'centos-offline-repo' 文件"
