name: SH Scripts Test

on: [push]

jobs:
  test-sh-scripts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set directory permissions
        run: |
          chmod -R 777 $(pwd)

      - name: Install Docker
        run: |
          sudo apt-get remove -y containerd
          sudo apt-get autoremove -y
          curl -fsSL https://get.docker.com | sudo sh

      - name: Run in CentOS 7 Container
        env:
          DEPS_FILE: dependencies.txt
        run: |
          echo "宿主机当前目录: $(pwd)"
          echo "宿主机文件列表:"
          ls -l $(pwd)

          if [ ! -f "$(pwd)/generate_yum_repo.sh" ] || [ ! -f "$(pwd)/install_dependency.sh" ]; then
              echo "错误：必要的脚本文件不存在！"
              exit 1
          fi

                    docker pull centos:7
          docker run --rm \
            -v $(pwd):/home/workdir:rw \
            --dns 8.8.8.8 \
            centos:7 /bin/bash -c '
              # 以 root 执行特权操作
              echo "nameserver 8.8.8.8" > /etc/resolv.conf &&
              curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo &&
              yum clean all && yum makecache &&
              yum install -y curl sudo createrepo yum-utils &&

              # 创建与 GitHub Actions 用户匹配的用户
              useradd -u $(id -u) -g $(id -g) -d /home/workdir -s /bin/bash runner &&
              mkdir -p /home/workdir &&
              chown -R $(id -u):$(id -g) /home/workdir &&
              
              # 切换到非特权用户执行后续步骤
              su -c "
                chmod +x /home/workdir/generate_yum_repo.sh /home/workdir/install_dependency.sh &&
                cd /home/workdir &&
                bash generate_yum_repo.sh -f /home/workdir/dependencies.txt &&
                YUM_REPO_TAR=\$(ls /home/workdir/agent_yum_repo_*.tar.gz | head -n 1) &&
                echo \"离线包路径: \$YUM_REPO_TAR\" &&
                bash install_dependency.sh -f \"\$YUM_REPO_TAR\" &&
                echo \"运行测试结束\"
              " -s /bin/bash runner
            '

      - name: 上传离线包到 Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "centos-offline-repo"
          path: "./agent_yum_repo_*.tar.gz"
          retention-days: 30

      - name: 下载 Artifact 链接说明
        run: |
          echo "离线包已生成并上传为 Artifact，可通过以下路径下载："
          echo "1. 进入 Actions 页面，找到本次运行的 Job"
          echo "2. 点击 [Artifacts] 标签页，下载 'centos-offline-repo' 文件"
